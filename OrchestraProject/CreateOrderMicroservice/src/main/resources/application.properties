spring.application.name=CreateOrderMicroservice

server.port=8080

spring.kafka.bootstrap-servers=localhost:9091,localhost:9092,localhost:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.consumer.group-id=orders-ms
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.tseytwa.*

order.event.topic.name=order-event-topic
order.commands.topic.name=order-command-topic-name
payment.order.command.topic.name=payment-order-command-topic
payment.events.topic.name=payment-event-topic
notification.event.topic.name=notification-event-topic
notification.command.topic.name=notification-command-topic


spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/clinic
spring.datasource.username=postgres
spring.datasource.password=Stas2005101010!

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.show_sql=true